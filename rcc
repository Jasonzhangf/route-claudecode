#!/bin/bash

# Route Claude Code - 简化CLI启动器
# 解决Ctrl+C无法退出的问题

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Default values - 环境变量优先，避免硬编码
PORT=${RCC_PORT:-3456}
COMMAND="start"

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    start|stop|status|migrate)
      COMMAND="$1"
      shift
      ;;
    -p|--port)
      PORT="$2"
      shift 2
      ;;
    -d|--debug)
      DEBUG_FLAG="--debug"
      shift
      ;;
    -h|--help)
      echo "Usage: rcc [COMMAND] [OPTIONS]"
      echo ""
      echo "Commands:"
      echo "  start     Start the router server (default)"
      echo "  stop      Stop the router server"
      echo "  status    Show server status"
      echo "  migrate   Run configuration migration"
      echo ""
      echo "Options:"
      echo "  -p, --port PORT    Server port (default: 3456)"
      echo "  -d, --debug        Enable debug mode"
      echo "  -h, --help         Show this help"
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      echo "Use 'rcc --help' for usage information"
      exit 1
      ;;
  esac
done

# Build if starting
if [ "$COMMAND" = "start" ]; then
    echo -e "${BLUE}🔨 Building project...${NC}"
    npm run build --silent
fi

# Kill existing process on port if starting
if [ "$COMMAND" = "start" ] && lsof -i :$PORT > /dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  Port $PORT is in use, killing existing process...${NC}"
    lsof -ti :$PORT | xargs kill -9 2>/dev/null || true
    sleep 1
fi

# Execute command directly (no background process)
case $COMMAND in
    start)
        echo -e "${GREEN}🚀 Starting Route Claude Code on port $PORT${NC}"
        echo -e "${YELLOW}💡 Press Ctrl+C to stop${NC}"
        echo ""
        exec node dist/cli.js start --port $PORT $DEBUG_FLAG
        ;;
    stop)
        exec node dist/cli.js stop
        ;;
    status)
        exec node dist/cli.js status
        ;;
    migrate)
        exec node dist/cli.js migrate
        ;;
    *)
        echo -e "${RED}Unknown command: $COMMAND${NC}"
        exit 1
        ;;
esac