{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(chmod:*)",
      "Bash(ln:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run build:*)",
      "Bash(npm pack)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(grep:*)",
      "Bash(git log:*)",
      "Bash(rm:*)",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/fallback-integration.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/cross-provider-fallback-strategy.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/conditional-fallback-resolver.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/adaptive-fallback-manager.ts)",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/provider-router.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/router/demo1-enhanced-router.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/intelligent-key-router.ts )",
      "Bash(/Users/fanzhang/Documents/github/route-claudecode/workspace/main-development/src/modules/providers/hybrid-multi-provider-router.ts)",
      "Bash(cat:*)",
      "Bash(rcc4:*)",
      "Bash(bash:*)",
      "Bash(./build-and-install.sh:*)",
      "Bash(npm start:*)",
      "Bash(tsc:*)",
      "Bash(lsof:*)",
      "Bash(npm run type-check:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(for file in src/modules/providers/provider-factory.ts src/modules/providers/load-balancer/load-balancer.ts src/modules/providers/provider-manager.ts)",
      "Bash(do)",
      "Bash(done)",
      "Bash(for file in src/modules/transformers/secure-anthropic-openai-transformer.ts src/modules/transformers/anthropic-to-openai-transformer.ts src/modules/transformers/transformer-factory.ts)",
      "Bash(for file in src/modules/validators/anthropic-input-validator.ts src/modules/validators/anthropic-output-validator.ts)",
      "WebFetch(domain:lmstudio.ai)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(npm root:*)",
      "Bash(./scripts/test-claude-rcc4-tool-calling.sh:*)",
      "Bash(curl:*)",
      "Bash(mv:*)",
      "Bash(echo:*)",
      "Bash(/tmp/cleanup-statistics.sh:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(/tmp/fix-exit-codes.sh:*)",
      "Bash(/tmp/restore-statistics.sh:*)",
      "Bash(curl:*)",
      "Bash(/tmp/fix-all-exit-codes.sh:*)",
      "Bash(npm test:*)",
      "Bash(./scripts/pipeline-test-runner.sh:*)",
      "Bash(scripts/test-claude-rcc4-tool-calling.sh:*)",
      "Bash(./scripts/rcc4-server-start.sh:*)",
      "Bash(cp:*)",
      "Bash(git checkout:*)",
      "Bash(kill:*)",
      "Bash(export ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key rcc4 code)",
      "Bash(npm run dev:*)",
      "Bash(claude config)",
      "Bash(claude config list)",
      "Bash(claude config get hooks)",
      "Bash(claude --version)",
      "Bash(cp:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(mv:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run type-check:*)",
      "Bash(./scripts/check-hardcoding.sh:*)",
      "Bash(jq:*)",
      "Bash(mkdir:*)",
      "Bash(mkdir:*)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"列出本目录中所有文件夹\")",
      "Bash(./scripts/check-hardcoding.sh:*)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"列出本目录中所有文件夹\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试真实HTTP实现：请描述当前工作目录的内容\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc-test-key claude --print \"测试模型映射修复：RCC系统是否正常工作？\")",
      "Bash(npx ts-node:*)",
      "Bash(echo:*)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试工具调用修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试系统配置路径修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试filter错误修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试Debug修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试Debug修复：请列出当前目录中的文件\")",
      "Bash(rg:*)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试debug记录功能：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试debug记录功能：请列出当前目录中的文件\")",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试debug系统修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试debug系统修复：请列出当前目录中的文件\")",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"重现filter错误：请列出当前目录中的文件\")",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试tools格式修复：请列出当前目录中的文件\" --timeout 30)",
      "Bash(ANTHROPIC_BASE_URL=http://localhost:5506 ANTHROPIC_API_KEY=rcc4-proxy-key claude --print \"测试tools格式修复：请列出当前目录中的文件\")",
    ],
    "deny": [],
    "additionalDirectories": [
      "/Users/fanzhang/.route-claudecode"
    ]
  }
}